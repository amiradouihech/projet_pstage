import React, { useState } from 'react';
import axios from 'axios';
import Tpp from './testdropdown';

function Ajouter() {
  const [selectedCategory, setSelectedCategory] = useState('');
  const [selectedSubCategory, setSelectedSubCategory] = useState('');

  const [description, setDescription] = useState('');
  const [prix, setPrix] = useState('');
  const [quantite, setQuantite] = useState('');

  const [tab, setTab] = useState({
    libelle: '',
    description: '',
    prix: '',
    quantite: '',
    id_categorie: selectedCategory,
    id_sous_categorie: selectedSubCategory,
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setTab({ ...tab, [name]: value });
  };

  const handleCategorySelect = (categoryId) => {
    console.log(categoryId);
    setSelectedCategory(categoryId);
  };

  const handleSubCategorySelect = (subCategoryId) => {
    console.log(subCategoryId);
    setSelectedSubCategory(subCategoryId);
  };

  const envoyer = async (e) => {
    e.preventDefault();

    try {
      const dataToSend = {
        libelle: tab.libelle,
        description: tab.description,
        prix: tab.prix,
        quantite: tab.quantite,
        id_categorie: selectedCategory,
        id_sous_categorie: selectedSubCategory,
      };

      await axios.post('http://localhost:4000/ajouter', dataToSend);
      if(selectedCategory==1){
        window.location.href = '/licat1';
      }
      else{
        if(selectedCategory==2){
          window.location.href = '/licat2';
        }
      }
      if(selectedCategory==3){
        window.location.href = '/licat3';
      }
      else{
        if(selectedCategory==4){
          window.location.href = '/licat4';
        }
      }
    } catch (error) {
      console.error("Erreur lors de l'envoi de la requête POST :", error);
    }
  };

  return (
    <div>
      <Tpp onSelectCathegori={handleCategorySelect} onSelectSubCat={handleSubCategorySelect} />

      <form onSubmit={envoyer}>
        <div className="mb-3">
          <label htmlFor="libelle" className="form-label">
            Libellé
          </label>
          <input type="text" className="form-control" id="libelle" name="libelle" onChange={handleChange} required/>
        </div>

        <div className="mb-3">
          <label htmlFor="description" className="form-label">
            Description
          </label>
          <input type="text" className="form-control" id="description" name="description" onChange={handleChange} required/>
        </div>

        <div className="mb-3">
          <label htmlFor="prix" className="form-label">
            Prix
          </label>
          <input type="number" className="form-control" id="prix" name="prix" onChange={handleChange} required />
        </div>

        <div className="mb-3">
          <label htmlFor="quantite" className="form-label">
            Quantité
          </label>
          <input type="number" className="form-control" id="quantite" name="quantite" onChange={handleChange} />
        </div>

        <button type="submit" className="btn btn-primary">
          Ajouter
        </button>
      </form>
    </div>
  );
}

export default Ajouter;
import React, { useState } from 'react';
import axios from 'axios';
import { useParams, useNavigate } from 'react-router-dom';
import './stylecss.css'
function Editer() {
  const navigate = useNavigate();
  const { id, lib, des, qte, pr } = useParams();
  
  const [libelle, setLibelle] = useState(lib);
  const [description, setDescription] = useState(des);
  const [prix, setPrix] = useState(pr);
  const [quantite, setQuantite] = useState(qte);
  const [libelleValid, setLibelleValid] = useState(true);
  const [descriptionValid, setDescriptionValid] = useState(true);
  const [prixValid, setPrixValid] = useState(true);
  const [quantiteValid, setQuantiteValid] = useState(true);
  const envoyer = async (e) => {
    e.preventDefault();
    
    try {
      await axios.put(`http://localhost:4000/editer/${id}`, {
        libelle,
        description,
        prix,
        quantite,
      });
      navigate('/liste_client');
    } catch (error) {
      console.error("Erreur lors de l'envoi de la requête PUT :", error);
    }
  };

  return (
    <div  className='aa'>
      <form onSubmit={envoyer}>
        <div className="mb-3">
          <label htmlFor="libelle" className="form-label">
            Libellé
          </label>
          <input
            type="text"
            className="form-control"
            id="libelle"
            name="libelle"
            value={libelle}
  
            onChange={(e) => setLibelle(e.target.value)}
          />
          {libelle !=='' && <p></p>}

        </div>

        <div className="mb-3">
          <label htmlFor="description" className="form-label">
            Description
          </label>
          <input
            type="text"
            className="form-control"
            id="description"
            name="description"
            value={description}
            onChange={(e) => setDescription(e.target.value)}
          />
        </div>

        <div className="mb-3">
          <label htmlFor="prix" className="form-label">
            Prix
          </label>
          <input
            type="number"
            className="form-control"
            id="prix"
            name="prix"
            value={prix}
            onChange={(e) => setPrix(e.target.value)}
          />
        </div>

        <div className="mb-3">
          <label htmlFor="quantite" className="form-label">
            Quantité
          </label>
          <input
            type="number"
            className="form-control"
            id="quantite"
            name="quantite"
            value={quantite}
            onChange={(e) => setQuantite(e.target.value)}
          />
        </div>

        <button type="submit" className="btn btn-primary">
          Éditer
        </button>
      </form>
    </div>
  );
}


